services:
  config:
    image: "ashraf2001/config:mcconfigs8"
    container_name: "ashraf_config"
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eureka:
    image: "ashraf2001/eureka:eurekaS8"
    container_name: "ashraf_eureka"
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "eureka"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  accounts:
    image: "ashraf2001/accounts:mcaccountss8"
    container_name: "ashraf_acc"
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: "accounts"
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  cards:
    image: "ashraf2001/cards:mcccardss8"
    container_name: "ashraf_card"
    ports:
      - "9000:9000"
    environment:
      SPRING_APPLICATION_NAME: "cards"
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config


  loans:
    image: "ashraf2001/loans:mcloanss8"
    container_name: "ashraf_loan"
    ports:
      - "8090:8090"
    environment:
      SPRING_APPLICATION_NAME: "loans"
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

networks:
  microservice:
    driver: "bridge"
